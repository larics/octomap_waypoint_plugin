name: obstacle
root: ./
startup_window: roscore
pre_window: |
  export UAV_NAMESPACE=red
  source ~/Workspace/inspection_ws/devel/setup.zsh
  export ODOMETRY_TOPIC=es_ekf/odom
  export SF_CARTO_MAP=eagle/carto_raw
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
        - export SITL_RITW_TERMINAL="tmux new-window -n:ardupilot1"; 
          waitForRos; roslaunch ardupilot_gazebo sim_vehicle.launch 
          enable_console:=false 
          parm_file:=$(rospack find ardupilot_gazebo)/config/kopterworx_red_v41_thrust_compassless.params
          name:=kopter41
        - waitForRos; rosparam set use_sim_time true; roslaunch ardupilot_gazebo mavros.launch config_file:=custom_config/apm_config.yaml
  - gazebo&slam:
      layout: tiled
      panes:
        - waitForRos; roslaunch ardupilot_gazebo kopterworx.launch 
          use_sim_time:=true
          enable_velodyne:=true
          max_range:=20
          world:=$(rospack find larics_gazebo_worlds)/worlds/simple_slam.world
          name:=$UAV_NAMESPACE/map
          remap_gazebo_tf:=true
          laser_count:=32
          gui:=false
          x:=2
          y:=2
        - waitForRos; rosparam set use_sim_time true; waitForSimulation; waitForSysStatus;
          roslaunch uav_ros_general cartographer.launch 
          simulation:=true 
          configuration_directory:=$(pwd)/custom_config 
          configuration_basename:=slam_sim.lua 
          map_frame:=$UAV_NAMESPACE/map/map 
          points2:=map/velodyne_points
          enable_starter:=true
          starter_odom:=map/odometry
          map_frame:=$SF_CARTO_MAP
        - inspection_ws; waitForRos; roslaunch sensor_fusion sensor_fusion.launch 
          config_yaml:=custom_config/sensor_client_carto_sim.yaml
  - arm&takeof:
      layout: tiled
      panes:
        - waitForRos; roslaunch uav_ros_control pid_carrot.launch 
          carrot_land:=true 
          manual_takeoff:=false 
          odometry:=$ODOMETRY_TOPIC
          local_callback_enable:=true
          land_disarm_enabled:=true
          control_type:=pid_cascade_node_yawrate
          default_params:=custom_config/position_control_thrust.params.yaml
          carrot_config:=custom_config/carrot_config.yaml
        - waitForRos; waitFor /$UAV_NAMESPACE/$ODOMETRY_TOPIC; rosrun ardupilot_gazebo automatic_takeoff.sh 2 override_odom
  - trajectory:
      layout: tiled
      panes:
        - waitForRos; roslaunch uav_ros_tracker topp_tracker.launch tracker_config:=custom_config/topp_config_custom.yaml
  - rviz:
      layout: tiled
      panes:
        - waitForRos; waitFor /$UAV_NAMESPACE/$ODOMETRY_TOPIC; rviz -d custom_config/carto.rviz